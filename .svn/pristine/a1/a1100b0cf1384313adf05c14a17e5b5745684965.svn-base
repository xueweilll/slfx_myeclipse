<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.benqzl.dao.dispatch.ReceiptDispatchExecuteMapper">
	<resultMap id="BaseResultMap"
		type="com.benqzl.pojo.dispatch.ReceiptDispatchExecute">
		<id column="ID" property="id" jdbcType="VARCHAR" />
		<result column="SID" property="sid" jdbcType="VARCHAR" />
		<result column="RDSTATIONID" property="rdstationid" jdbcType="VARCHAR" />
		<result column="GATEEXECUTETIME" property="gateexecutetime"
			jdbcType="TIMESTAMP" />
		<result column="UNITEXECUTETIME" property="unitexecutetime"
			jdbcType="TIMESTAMP" />
		<result column="MEMO" property="memo" jdbcType="VARCHAR" />
		<result column="STARTOUTERLEVEL" jdbcType="VARCHAR" property="startouterlevel" />
		<result column="STARTINLANDLEVEL" jdbcType="VARCHAR" property="startinlandlevel" />
		<result column="STOPPUTERLEVEL" jdbcType="VARCHAR" property="stopouterlevel" />
		<result column="STOPINLANDLEVEL" jdbcType="VARCHAR" property="stopinlandlevel" />
	</resultMap>
	<resultMap id="userStatistics" type="com.benqzl.pojo.util.UserStatistics">
		<id column="ID" property="id" jdbcType="VARCHAR" />
		<result column="BEGINTIME" property="begintime" jdbcType="VARCHAR" />
		<result column="ENDTIME" property="endtime" jdbcType="VARCHAR" />
		<result column="COUNTS" property="count" jdbcType="DECIMAL" />
		<result column="KJTIME" property="kjtime" jdbcType="VARCHAR" />
		<result column="RUNTIME" property="runtime" jdbcType="VARCHAR" />
		<result column="CSCHARGE" property="cscharge" jdbcType="VARCHAR" />
		<result column="DCSCHARGE" property="dcscharge" jdbcType="VARCHAR" />
		<result column="DESIGNDISCHARGE" property="designdischarge"
			jdbcType="VARCHAR" />
		<result column="MOTERTYPE" property="motertype" jdbcType="VARCHAR" />
		<result column="CODE" property="code" jdbcType="VARCHAR" />
		<result column="NAME" property="sname" jdbcType="VARCHAR" />
		<result column="RDSTATE" property="rdstate" jdbcType="DECIMAL" />
		<result column="DISPATCHTYPE" property="dispatchtype" jdbcType="DECIMAL" />
		<association property="receiptDispatchExecute"
			javaType="com.benqzl.pojo.dispatch.ReceiptDispatchExecute">
			<id column="ID" property="id" jdbcType="VARCHAR" />
			<result column="SID" property="sid" jdbcType="VARCHAR" />
			<result column="RDSTATIONID" property="rdstationid" jdbcType="VARCHAR" />
			<result column="GATEEXECUTETIME" property="gateexecutetime"
				jdbcType="VARCHAR" />
			<result column="UNITEXECUTETIME" property="unitexecutetime"
				jdbcType="VARCHAR" />
			<result column="STARTOUTERLEVEL" property="startouterlevel" jdbcType="VARCHAR" />
			<result column="STARTINLANDLEVEL" property="startinlandlevel" jdbcType="VARCHAR" />
			<result column="STOPOUTERLEVEL" property="stopouterlevel" jdbcType="VARCHAR" />
			<result column="STOPINLANDLEVEL" property="stopinlandlevel" jdbcType="VARCHAR" />
			<result column="MEMO" property="memo" jdbcType="VARCHAR" />
		</association>
		<association property="receiptDispatchExecuteUnits"
			javaType="com.benqzl.pojo.dispatch.ReceiptDispatchExecuteUnits">
			<id column="ID" property="id" jdbcType="VARCHAR" />
			<result column="UNITID" property="unitid" jdbcType="VARCHAR" />
			<result column="UBEGINTIME" property="begintime" jdbcType="TIMESTAMP" />
			<result column="UENDTIME" property="endtime" jdbcType="TIMESTAMP" />
			<result column="EXECUTEID" property="executeid" jdbcType="VARCHAR" />
		</association>

	</resultMap>
	<sql id="Base_Column_List">
		ID, SID, RDSTATIONID, GATEEXECUTETIME, UNITEXECUTETIME,
		MEMO,STARTOUTERLEVEL,STARTINLANDLEVEL,STOPPUTERLEVEL,STOPINLANDLEVEL
	</sql>
	<sql id="Base_Column_List1">
		a.id as ID, d.begintime as BEGINTIME,d.endtime as
		ENDTIME,c.counts as COUNTS,
		round((d.endtime-d.begintime)*24,2) as RUNTIME,
		round(to_number(d.times1/3600),2) as KJTIME, a.sid as
		SID,a.rdstationid as RDSTATIONIN,st.name as name,
		 st.levels as LEVELS,
	<!-- 	round(d.cscharge/10000,2) as
		CSCHARGE, -->
		<!-- decode(d.times1,0,0,round((d.cscharge/10000/(d.times1/3600)),2))*(d.times/3600) as CSCHARGE, -->
		decode(d.times1,0,0,round((d.cscharge/d.times1),2)) as
		DCSCHARGE,
		rds.state as RDSTATE,
		drd.code as CODE,drd.dispatchtype as DISPATCHTYPE,
			a.startouterlevel as STARTOUTERLEVEL,
        a.startinlandlevel as STARTINLANDLEVEL,
        a.stopputerlevel as STOPOUTERLEVEL,
        a.stopinlandlevel as STOPINLANDLEVEL
	</sql>
	<sql id="Base_Column_List2">
		a.id as ID, d.begintime as BEGINTIME,c.counts as COUNTS,
		<if test="deadlines!=null">
		decode(d.endtime,'',#{deadlines},to_char(d.endtime,'yyyy-MM-dd HH24:mi:ss')) as ENDTIME,
		decode(d.endtime,'',
		decode(		
		sign(to_date(#{deadlines},'yyyy-MM-dd HH24:mi:ss')-(d.begintime)),-1,'',round((to_date(#{deadlines},'yyyy-MM-dd HH24:mi:ss')-(d.begintime))*24,2)),round((d.endtime-d.begintime)*24,2)) 
		as RUNTIME,
		</if>
		<if test="deadlines==null">
		d.endtime as ENDTIME,
		round((d.endtime-d.begintime)*24,2) as RUNTIME,
		</if>
		round(to_number(d.times1/3600),2) as KJTIME, a.sid as
		SID,a.rdstationid as RDSTATIONIN,st.name as name,
		 st.levels as LEVELS,
	<!-- 	round(d.cscharge/10000,2) as
		CSCHARGE, -->
		<!-- decode(d.times1,0,0,round((d.cscharge/10000/(d.times1/3600)),2))*(d.times/3600) as CSCHARGE, -->
		decode(d.times1,0,0,round((d.cscharge/d.times1),2)) as
		DCSCHARGE,
		rds.state as RDSTATE,
		drd.code as CODE,drd.dispatchtype as DISPATCHTYPE,
			a.startouterlevel as STARTOUTERLEVEL,
        a.startinlandlevel as STARTINLANDLEVEL,
        a.stopputerlevel as STOPOUTERLEVEL,
        a.stopinlandlevel as STOPINLANDLEVEL
	</sql>
	<select id="findStatisticsByPage" resultMap="userStatistics"
		parameterType="java.util.Map">
		select F.*, ROUND(F.KJTIME*F.DCSCHARGE*3600/10000,2) AS CSCHARGE from
		(select E.*,ROWNUM RN from(
		select
		<include refid="Base_Column_List2" /> 

		from DIS_RD_EXECUTE a
		left join (select b.*
		from (select sum(t.times) as times1,
		max(t.endtime) as endtime,
		min(t.begintime) as begintime,
		sum(t.cscharge) as cscharge,
		executeid
		from (select cs.id as id,
		 cs.unitid as unitid,
		 cs.begintime as begintime,
		 cs.endtime as endtime,
		 cs.executeid as executeid,
		 cs.designdischarge as designdischarge,
		 decode(sign(cs.times),-1,0,cs.times) as times,
		cs.designdischarge *decode(sign(cs.times),-1,0,cs.times) as cscharge
		from (select u.*,
		su.designdischarge as designdischarge,
		<if test="deadlines!=null">
		   decode(u.endtime,'',(to_date(#{deadlines},'yyyy-MM-dd HH24:mi:ss')-(u.begintime)) * 24 * 60 * 60 ,((u.endtime)-(u.begintime)) * 24 * 60 * 60 )as times
		</if>
		<if test="deadlines==null">
		((u.endtime) -
		(u.begintime)) * 24*60*60 as times
		</if>
		from dis_rd_execute_units u
		left join sys_unit su
		on su.id = u.unitid 
		order by executeid) cs) t
		group by executeid) b) d
		on d.executeid = a.id
		inner join (select count(unitid) as counts, executeid
		from dis_rd_execute_units
		group by executeid) c
		on c.executeid = a.id
		left join sys_station st
		on st.id = a.sid
		left join dis_rd_stations rds on
		rds.id=a.rdstationid
		left join dis_receipt_dispatch drd
		on drd.id=rds.rdispatchid
		where 1=1
		and rds.state &gt;=2
		<if test="dispatchtype!=null">
		   and drd.dispatchtype=#{dispatchtype,jdbcType=VARCHAR}
		</if>
		<if test="ssid !=null">
			and st.id in 
        (<foreach collection="ssid" item="item" index="index"
			separator="union all">
			(select #{item,jdbcType=VARCHAR} from dual)
		</foreach>)
		</if>
		<if test="dcode !=null and dcode!=''">
			and drd.code like '%'||#{dcode,jdbcType=VARCHAR}||'%'
		</if>
		<if test="begintime !=null">
			and d.begintime &gt;=#{begintime}
		</if>
		<if test="endtime !=null">
			and d.begintime &lt;=#{endtime}
		</if>
		) E
		where ROWNUM &lt;=#{p2}
		order by E.LEVELS,E.begintime desc)F
		where RN
		&gt; #{p1}
	</select>
	<select id="pageStatisticsCount" resultType="java.lang.Integer"
		parameterType="java.util.Map">
		select count(*) as num
		from
		(select E.*,ROWNUM RN from(
		select
		<include refid="Base_Column_List1" />
		from DIS_RD_EXECUTE a
		left join (select b.*
		from (select sum(t.times) as times1,
		max(t.endtime) as endtime,
		min(t.begintime) as begintime,
		sum(t.cscharge) as cscharge,
		executeid
		from (select cs.*,
		cs.designdischarge *
		cs.times as cscharge
		from (select u.*,
		su.designdischarge as designdischarge,
		ceil((u.endtime) -
		(u.begintime)) * 24 as times
		from dis_rd_execute_units u
		left join sys_unit su
		on su.id = u.unitid
		order by executeid) cs) t
		group by executeid) b) d
		on d.executeid = a.id
		inner join (select count(unitid) as counts, executeid
		from dis_rd_execute_units
		group by executeid) c
		on c.executeid = a.id
		left join sys_station st
		on st.id = a.sid
		left join dis_rd_stations rds on
		rds.id=a.rdstationid
		left join dis_receipt_dispatch drd
		on drd.id=rds.rdispatchid
		where 1=1
		<!-- 状态为已实施未完成和完成的 -->
		and rds.state &gt;=2
		<if test="dispatchtype!=null">
		   and drd.dispatchtype=#{dispatchtype,jdbcType=VARCHAR}
		</if>
		<if test="ssid !=null">
				and st.id in 
        (<foreach collection="ssid" item="item" index="index"
			separator="union all">
			(select #{item,jdbcType=VARCHAR} from dual)
		</foreach>)
		</if>
		<if test="dcode !=null and dcode!=''">
			and drd.code like '%'||#{dcode,jdbcType=VARCHAR}||'%'
		</if>
		<if test="begintime !=null">
			and d.begintime &gt;=#{begintime}
		</if>
		<if test="endtime !=null">
			and d.begintime &lt;=#{endtime}
		</if>
		) E)
	</select>
	<select id="findStatisticsByExport" resultMap="userStatistics"
		parameterType="java.util.Map">
		select F.*, ROUND(F.KJTIME*F.DCSCHARGE*3600/10000,2) AS CSCHARGE from
		(select E.*,ROWNUM RN from(
		select
		<include refid="Base_Column_List1" />
		from DIS_RD_EXECUTE a
		left join (select b.*
		from (select sum(t.times) as times1,
		max(t.endtime) as endtime,
		min(t.begintime) as begintime,
		sum(t.cscharge) as cscharge,
		executeid
		from (select cs.*,
		cs.designdischarge *
		cs.times as cscharge
		from (select u.*,
		su.designdischarge as designdischarge,
		((u.endtime) -
		(u.begintime)) * 24*60*60 as times
		from dis_rd_execute_units u
		left join sys_unit su
		on su.id = u.unitid 
		order by executeid) cs) t
		group by executeid) b) d
		on d.executeid = a.id
		inner join (select count(unitid) as counts, executeid
		from dis_rd_execute_units
		group by executeid) c
		on c.executeid = a.id
		left join sys_station st
		on st.id = a.sid
		left join dis_rd_stations rds on
		rds.id=a.rdstationid
		left join dis_receipt_dispatch drd
		on drd.id=rds.rdispatchid
		where 1=1
		and rds.state &gt;=2
		<if test="dispatchtype!=null">
		   and drd.dispatchtype=#{dispatchtype,jdbcType=VARCHAR}
		</if>
		<if test="ssid !=null">
			and st.id in 
        (<foreach collection="ssid" item="item" index="index"
			separator="union all">
			(select #{item,jdbcType=VARCHAR} from dual)
		</foreach>)
		</if>
		<if test="dcode !=null and dcode!=''">
			and drd.code like '%'||#{dcode,jdbcType=VARCHAR}||'%'
		</if>
		<if test="begintime !=null">
			and d.begintime &gt;=#{begintime}
		</if>
		<if test="endtime !=null">
			and d.begintime &lt;=#{endtime}
		</if>
		) E
		order by E.LEVELS,E.begintime desc)F
	</select>
	<select id="findStatisticsPrint" resultMap="userStatistics"
		parameterType="java.util.Map">
	select E.* from (select
	a.id as ID,
	d.begintime as BEGINTIME,
	d.endtime as ENDTIME,
	c.counts as COUNTS,
	round((d.endtime - d.begintime) * 24, 2) as RUNTIME,
	round(to_number(d.times1 / 3600), 2) as KJTIME,
	a.sid as SID,
	a.rdstationid as RDSTATIONIN,
	st.name as name,
	st.levels as LEVELS,
	decode(d.times1, 0, 0, round((d.cscharge / d.times1), 2)) as DCSCHARGE,
	rds.state as RDSTATE,
	drd.code as CODE,
	drd.dispatchtype as DISPATCHTYPE,
	a.startouterlevel as STARTOUTERLEVEL,
	a.startinlandlevel as STARTINLANDLEVEL,
	a.stopputerlevel as STOPOUTERLEVEL,
	a.stopinlandlevel as STOPINLANDLEVEL,
	ROUND(round(d.times1 / 3600, 2) *
	decode(d.times1, 0, 0, round((d.cscharge / d.times1), 2)) * 3600 /
	10000,
	2) AS CSCHARGE
	from DIS_RD_EXECUTE a
	left join (select b.*
	from (select sum(t.times) as times1,
	max(t.endtime) as endtime,
	min(t.begintime) as begintime,
	sum(t.cscharge) as cscharge,
	executeid
	from (select cs.*,
	cs.designdischarge * cs.times as cscharge
	from (select u.*,
	su.designdischarge as designdischarge,
	((u.endtime) - (u.begintime)) * 24 * 60 * 60 as times
	from dis_rd_execute_units u
	left join sys_unit su
	on su.id = u.unitid
	order by executeid) cs) t
	group by executeid) b) d
	on d.executeid = a.id
	inner join (select count(unitid) as counts, executeid
	from dis_rd_execute_units
	group by executeid) c
	on c.executeid = a.id
	left join sys_station st
	on st.id = a.sid
	left join dis_rd_stations rds
	on rds.id = a.rdstationid
	left join dis_receipt_dispatch drd
	on drd.id = rds.rdispatchid
		where 1=1
		and rds.state &gt;=2
		<if test="dispatchtype!=null">
		   and drd.dispatchtype=#{dispatchtype,jdbcType=VARCHAR}
		</if>
		<if test="ssid !=null">
			and st.id in 
        (<foreach collection="ssid" item="item" index="index"
			separator="union all">
			(select #{item,jdbcType=VARCHAR} from dual)
		</foreach>)
		</if>
		<if test="dcode !=null and dcode!=''">
			and drd.code like '%'||#{dcode,jdbcType=VARCHAR}||'%'
		</if>
		<if test="begintime !=null">
			and d.begintime &gt;=#{begintime}
		</if>
		<if test="endtime !=null">
			and d.begintime &lt;=#{endtime}
		</if>)E
		order by E.LEVELS,E.begintime desc
	</select>
	<select id="findStations" resultMap="userStatistics"
		parameterType="java.util.Map">
		select
		u.designdischarge as DESIGNDISCHARGE,u.motertype as MOTERTYPE,s.name,d.counts as COUNTS
		from
		sys_station s
		left join sys_unit u on
		s.id =u.sid
		left join (
		select count(a.id) as counts,a.id from
		(select u.designdischarge,u.motertype,u.designdischarge ,s.name,s.id as id
		from sys_station s
		join sys_unit u on u.sid=s.id
		where s.id=#{sid}
		)a
		group by a.id)d on d.id=s.id
		where s.isdel=0 and u.isdel=0
		and s.id=#{sid} and rownum=1
	</select>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.String">
		select
		<include refid="Base_Column_List" />
		from DIS_RD_EXECUTE
		where ID = #{id,jdbcType=VARCHAR}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.String">
		delete from
		DIS_RD_EXECUTE
		where ID = #{id,jdbcType=VARCHAR}
	</delete>
	<insert id="insert" parameterType="com.benqzl.pojo.dispatch.ReceiptDispatchExecute">
		insert into DIS_RD_EXECUTE
		(ID, SID, RDSTATIONID,
		GATEEXECUTETIME, UNITEXECUTETIME, MEMO,STARTOUTERLEVEL,
		STARTINLANDLEVEL,STOPPUTERLEVEL,STOPINLANDLEVEL
		)
		values
		(#{id,jdbcType=VARCHAR}, #{sid,jdbcType=VARCHAR},
		#{rdstationid,jdbcType=VARCHAR},
		#{gateexecutetime,jdbcType=TIMESTAMP},
		#{unitexecutetime,jdbcType=TIMESTAMP}, #{memo,jdbcType=VARCHAR},
		#{startouterlevel,jdbcType=VARCHAR},
		#{startinlandlevel,jdbcType=VARCHAR},
		#{stopouterlevel,jdbcType=VARCHAR},
		#{stopinlandlevel,jdbcType=VARCHAR}
		)
	</insert>
	<insert id="insertSelective" parameterType="com.benqzl.pojo.dispatch.ReceiptDispatchExecute">
		insert into DIS_RD_EXECUTE
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				ID,
			</if>
			<if test="sid != null">
				SID,
			</if>
			<if test="rdstationid != null">
				RDSTATIONID,
			</if>
			<if test="gateexecutetime != null">
				GATEEXECUTETIME,
			</if>
			<if test="unitexecutetime != null">
				UNITEXECUTETIME,
			</if>
			<if test="memo != null">
				MEMO,
			</if>
			<if test="startouterlevel != null">
				STARTOUTERLEVEL,
			</if>
			<if test="startinlandlevel != null">
				STARTINLANDLEVEL,
			</if>
			<if test="stopouterlevel != null">
				STOPPUTERLEVEL,
			</if>
			<if test="stopinlandlevel != null">
				STOPINLANDLEVEL,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=VARCHAR},
			</if>
			<if test="sid != null">
				#{sid,jdbcType=VARCHAR},
			</if>
			<if test="rdstationid != null">
				#{rdstationid,jdbcType=VARCHAR},
			</if>
			<if test="gateexecutetime != null">
				#{gateexecutetime,jdbcType=TIMESTAMP},
			</if>
			<if test="unitexecutetime != null">
				#{unitexecutetime,jdbcType=TIMESTAMP},
			</if>
			<if test="memo != null">
				#{memo,jdbcType=VARCHAR},
			</if>
			<if test="startouterlevel != null">
				#{startouterlevel,jdbcType=VARCHAR},
			</if>
			<if test="startinlandlevel != null">
				#{startinlandlevel,jdbcType=VARCHAR},
			</if>
			<if test="stopouterlevel != null">
				#{stopouterlevel,jdbcType=VARCHAR},
			</if>
			<if test="stopinlandlevel != null">
				#{stopinlandlevel,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.benqzl.pojo.dispatch.ReceiptDispatchExecute">
		update DIS_RD_EXECUTE
		<set>
			<if test="sid != null">
				SID = #{sid,jdbcType=VARCHAR},
			</if>
			<if test="rdstationid != null">
				RDSTATIONID = #{rdstationid,jdbcType=VARCHAR},
			</if>
			<if test="gateexecutetime != null">
				GATEEXECUTETIME = #{gateexecutetime,jdbcType=TIMESTAMP},
			</if>
			<if test="unitexecutetime != null">
				UNITEXECUTETIME = #{unitexecutetime,jdbcType=TIMESTAMP},
			</if>
			<if test="memo != null">
				MEMO = #{memo,jdbcType=VARCHAR},
			</if>
			<if test="startouterlevel != null">
				STARTOUTERLEVEL = #{startouterlevel,jdbcType=VARCHAR},
			</if>
			<if test="startinlandlevel != null">
				STARTINLANDLEVEL = #{startinlandlevel,jdbcType=VARCHAR},
			</if>
			<if test="stopouterlevel != null">
				STOPPUTERLEVEL = #{stopouterlevel,jdbcType=VARCHAR},
			</if>
			<if test="stopinlandlevel != null">
				STOPINLANDLEVEL =#{stopinlandlevel,jdbcType=VARCHAR},
			</if>
			
			<if test="startouterlevel == null">
				STARTOUTERLEVEL = NULL,
			</if>
			<if test="startinlandlevel == null">
				STARTINLANDLEVEL = NULL,
			</if>
			<if test="stopouterlevel == null">
				STOPPUTERLEVEL = NULL,
			</if>
			<if test="stopinlandlevel == null">
				STOPINLANDLEVEL = NULL,
			</if>
		</set>
		where ID = #{id,jdbcType=VARCHAR}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.benqzl.pojo.dispatch.ReceiptDispatchExecute">
		update
		DIS_RD_EXECUTE
		set SID = #{sid,jdbcType=VARCHAR},
		RDSTATIONID =
		#{rdstationid,jdbcType=VARCHAR},
		GATEEXECUTETIME =
		#{gateexecutetime,jdbcType=TIMESTAMP},
		UNITEXECUTETIME =
		#{unitexecutetime,jdbcType=TIMESTAMP},
		MEMO = #{memo,jdbcType=VARCHAR}
		where
		ID = #{id,jdbcType=VARCHAR}
	</update>

	<select id="selectExecuteByDispatchstationId" resultMap="BaseResultMap"
		parameterType="java.lang.String">
		select
		<include refid="Base_Column_List" />
		from DIS_RD_EXECUTE
		where RdStationID =
		#{dispatchstationid,jdbcType=VARCHAR}
	</select>
	<update id="updateRDStationState" parameterType="java.util.Map">
		update
		dis_rd_Stations set STATE = #{state} where id=#{id}
	</update>
	<update id="updateRDStationState_look" parameterType="java.util.Map">
		update
		dis_rd_Stations
		set STATE = #{state,jdbcType=VARCHAR},
		RECEIPTER =
		#{receipter,jdbcType=VARCHAR},
		RECEIPTTIME =
		#{receipttime,jdbcType=TIMESTAMP}
		where id=#{id}
	</update>
	<resultMap type="com.benqzl.pojo.dispatch.ReceiptDispatchExecute"
		id="execute">
		<id column="ID" property="id" jdbcType="VARCHAR" />
		<result column="SID" property="sid" jdbcType="VARCHAR" />
		<result column="RDSTATIONID" property="rdstationid" jdbcType="VARCHAR" />
		<result column="GATEEXECUTETIME" property="gateexecutetime"
			jdbcType="TIMESTAMP" />
		<result column="UNITEXECUTETIME" property="unitexecutetime"
			jdbcType="TIMESTAMP" />
		<result column="MEMO" property="memo" jdbcType="VARCHAR" />
		<result column="STARTOUTERLEVEL" jdbcType="VARCHAR" property="startouterlevel" />
		<result column="STARTINLANDLEVEL" jdbcType="VARCHAR" property="startinlandlevel" />
		<result column="STOPPUTERLEVEL" jdbcType="VARCHAR" property="stopouterlevel" />
		<result column="STOPINLANDLEVEL" jdbcType="VARCHAR" property="stopinlandlevel" />
		<association property="s" javaType="com.benqzl.pojo.system.Station">
			<id column="SID" property="id" jdbcType="VARCHAR" />
			<result column="CODE" property="code" jdbcType="VARCHAR" />
			<result column="NAME" property="name" jdbcType="VARCHAR" />
			<result column="LAT" property="lat" jdbcType="DECIMAL" />
			<result column="LON" property="lon" jdbcType="DECIMAL" />
			<result column="LEVELS" property="levels" jdbcType="DECIMAL" />
			<result column="CREATETIME" property="createtime" jdbcType="TIMESTAMP" />
			<result column="EDITTIME" property="edittime" jdbcType="TIMESTAMP" />
			<result column="ISDEL" property="isdel" jdbcType="DECIMAL" />
			<result column="REMARK" property="remark" jdbcType="VARCHAR" />
		</association>
		<association property="rds"
			javaType="com.benqzl.pojo.dispatch.ReceiptDispatchStations">
			<id column="RDSTATIONID" property="id" jdbcType="VARCHAR" />
			<result column="RDISPATCHID" property="rdispatchid" jdbcType="VARCHAR" />
			<result column="SID" property="sid" jdbcType="VARCHAR" />
			<result column="RECEIPTER" property="receipter" jdbcType="VARCHAR" />
			<result column="RECEIPTTIME" property="receipttime" jdbcType="TIMESTAMP" />
			<result column="STATE" property="state" jdbcType="DECIMAL" />
			<association property="receiptDispatch"
				javaType="com.benqzl.pojo.dispatch.ReceiptDispatch">
				<id column="PATCHID" property="id" jdbcType="VARCHAR" />
				<result column="RECEIPTID" property="receiptid" jdbcType="VARCHAR" />
				<result column="CREATER" property="creater" jdbcType="VARCHAR" />
				<result column="CREATETIME" property="createtime" jdbcType="TIMESTAMP" />
				<result column="CODE" property="code" jdbcType="VARCHAR" />
				<result column="MEMO" property="memo" jdbcType="VARCHAR" />
				<result column="SENDER" property="sender" jdbcType="VARCHAR" />
				<result column="SENDTIME" property="sendtime" jdbcType="TIMESTAMP" />
				<result column="TRANSMITCONTENTS" property="transmitcontents"
					jdbcType="VARCHAR" />
				<result column="TRANSMITER" property="transmiter" jdbcType="VARCHAR" />
				<result column="TRANSMITTIME" property="transmittime"
					jdbcType="TIMESTAMP" />
				<result column="STATE" property="state" jdbcType="DECIMAL" />
				<result column="COMPLETETIME" property="completetime"
					jdbcType="TIMESTAMP" />
				<result column="DISPATCHTYPE" property="dispatchtype"
					jdbcType="VARCHAR" />
			</association>
		</association>
		<collection property="rdeplist"
			ofType="com.benqzl.pojo.dispatch.ReceiptDispatchExecutePeople">
			<id column="EXECUTEPEOPLE_ID" property="id" jdbcType="VARCHAR" />
			<result column="USERID" property="userid" jdbcType="VARCHAR" />
			<association property="user" javaType="com.benqzl.pojo.system.User">
				<id column="USERID" property="userid" jdbcType="VARCHAR" />
				<result column="USERNAME" property="username" jdbcType="VARCHAR" />
			</association>
		</collection>

	</resultMap>
<!-- 	<select id="selectExecuteByStationId" parameterType="java.lang.String"
		resultMap="execute">
		select a.id,a.rdstationid,c.id as
		patchid,c.code,a.sid,d.name,a.memo, 
		a.startouterlevel,a.startinlandlevel,a.stopputerlevel,a.stopinlandlevel,
		e.id as executepeople_id,e.userid,f.username
		from dis_rd_execute
		a,dis_rd_stations b, dis_receipt_dispatch c,
		sys_station
		d,dis_rd_execute_people e, (select u.userid,e.name as username from
		sys_user u left join sys_employee e on u.employeeid= e.id) f
		where
		a.rdstationid=b.id and b.rdispatchid=c.id and a.sid=d.id and
		a.id=e.execteid and e.userid=f.userid
		and a.rdstationid=#{sid}
	</select> -->
	<select id="selectExecuteByStationId" parameterType="java.lang.String"
		resultMap="execute">
		select a.id,
       a.rdstationid,
       c.id               as patchid,
       c.code,
       a.sid,
       d.name,
       a.memo,
       a.startouterlevel,
       a.startinlandlevel,
       a.stopputerlevel,
       a.stopinlandlevel,
       e.id               as executepeople_id,
       e.userid,
       f.username
  from dis_rd_execute a
 inner join dis_rd_stations b
    on b.id = a.rdstationid
 inner join dis_receipt_dispatch c
    on c.id = b.rdispatchid
 inner join sys_station d
    on d.id = a.sid
  left join dis_rd_execute_people e
    on e.execteid = a.id
  left join (select u.userid, e.name as username
               from sys_user u
               left join sys_employee e
                 on u.employeeid = e.id) f
    on f.userid = e.userid
 where 1 = 1    
   and a.rdstationid = #{sid}
	</select> 
		<select id="countExecuteByStationId" parameterType="java.lang.String"
		resultType="java.lang.Integer">
		select count(*)
  from dis_rd_execute a
 inner join dis_rd_stations b
    on b.id = a.rdstationid
 inner join dis_receipt_dispatch c
    on c.id = b.rdispatchid
 inner join sys_station d
    on d.id = a.sid
  left join dis_rd_execute_people e
    on e.execteid = a.id
  left join (select u.userid, e.name as username
               from sys_user u
               left join sys_employee e
                 on u.employeeid = e.id) f
    on f.userid = e.userid
 where 1 = 1    
   and a.rdstationid = #{sid}
	</select> 
	
	
	
	<select id="findUser" resultType="com.benqzl.pojo.system.User">
		select u.userid, e.name as username
          from sys_user u
          left join sys_employee e
            on u.employeeid = e.id 
          left join sys_department d
             on d.id=e.departmentid  
            where
		u.isdel='0'
		order by d.name desc
	</select>
	<resultMap type="com.benqzl.pojo.dispatch.ReceiptDispatchExecuteUnits"
		id="Unit">
		<id column="ID" property="id" jdbcType="VARCHAR" />
		<result column="UNITID" property="unitid" jdbcType="VARCHAR" />
		<result column="BEGINTIME" property="begintime" jdbcType="TIMESTAMP" />
		<result column="ENDTIME" property="endtime" jdbcType="TIMESTAMP" />
		<result column="EXECUTEID" property="executeid" jdbcType="VARCHAR" />
		<association property="unit" javaType="com.benqzl.pojo.system.Unit">
			<id column="UNITID" property="id" jdbcType="VARCHAR" />
			<result column="NAME" property="name" jdbcType="VARCHAR" />
		</association>
	</resultMap>
	<select id="findUnitByExecuteid" resultMap="Unit" parameterType="java.lang.String">
		select a.*,b.name from dis_rd_execute_units a,sys_unit b where
		a.unitid=b.id and a.executeid=#{executeid} order by a.BEGINTIME asc
	</select>
	<resultMap type="com.benqzl.pojo.dispatch.ReceiptDispatchExecuteGate"
		id="Gate">
		<id column="ID" property="id" jdbcType="VARCHAR" />
		<result column="GID" property="gid" jdbcType="VARCHAR" />
		<result column="OPERATETIME" property="operatetime" jdbcType="TIMESTAMP" />
		<result column="OPERATE" property="operate" jdbcType="DECIMAL" />
		<result column="RDEXECUTEID" property="rdexecuteid" jdbcType="VARCHAR" />
		<association property="gate" javaType="com.benqzl.pojo.system.Gate">
			<id column="GID" property="id" jdbcType="VARCHAR" />
			<result column="NAME" property="name" jdbcType="VARCHAR" />
		</association>
	</resultMap>
	<select id="findGateByExecuteid" resultMap="Gate" parameterType="java.lang.String">
		select a.*,b.name from dis_rd_execute_gate a,sys_gate b where
		a.gid=b.id and a.RDEXECUTEID=#{executeid} order by a.OPERATETIME asc
	</select>
	<delete id="deleteExecutePeople" parameterType="java.lang.String">
		delete
		dis_rd_execute_people where execteid=#{executeid}
	</delete>
	<delete id="deleteExecuteUnit" parameterType="java.lang.String">
		delete
		dis_rd_execute_units where executeid=#{executeid}
	</delete>
	<delete id="deleteExecuteGate" parameterType="java.lang.String">
		delete
		dis_rd_execute_gate where rdexecuteid=#{executeid}
	</delete>
	<resultMap id="BaseTotalResultMap" type="com.benqzl.pojo.dispatch.ReceiptDispatchTotal">
		<result column="ID" property="id" jdbcType="VARCHAR" />
		<result column="RDSID" property="rdsid" jdbcType="VARCHAR" />
		<result column="RDEID" property="rdeid" jdbcType="VARCHAR" />
		<result column="MEMO" property="memo" jdbcType="VARCHAR" />
		<result column="SID" property="sid" jdbcType="VARCHAR" />
		<result column="STATIONNAME" property="stationname" jdbcType="VARCHAR" />
		<result column="USERNAMES" property="usernames" jdbcType="VARCHAR" />
		<result column="SENDER" property="sender" jdbcType="VARCHAR" />
		<result column="SENDTIME" property="sendtime" jdbcType="TIMESTAMP" />
		<result column="SENDERNAME" property="sendername" jdbcType="VARCHAR" />
		<result column="DEPARTMENTNAME" property="departmentname" jdbcType="VARCHAR" />
	</resultMap>
	<select id="selectTotalByRDID" resultMap="BaseTotalResultMap"
		parameterType="java.lang.String">
		select rd.id,
		rds.id as rdsid,
		rde.id as rdeid,
		rde.memo,
		rds.sid,
		s.name as stationname,
		t.names as usernames,
		rdd.sender,rdd.sendtime,
		ue.name as sendername,
		d.name as departmentname
		from dis_receipt_dispatch rd
		inner join dis_rd_stations rds
		on rd.id = rds.rdispatchid
		inner join dis_rd_execute rde
		on rde.rdstationid = rds.id
		inner join sys_station s
		on s.id = rds.sid
		inner join dis_rd_department rdd on rdd.rdid = rd.id and s.departmentid =
		rdd.departmentid
		left join (select u.userid, e.name from sys_user u left join sys_employee e
		on u.employeeid = e.id) ue on ue.userid = rdd.sender
		left join sys_department d on d.id = rdd.departmentid
		inner join (select t.id, wmsys.wm_concat(name) names
		from (select rde.id, rdp.userid, e.name
		from dis_rd_execute rde
		inner join dis_rd_execute_people rdp
		on rde.id = rdp.execteid
		left join sys_user u
		on u.userid = rdp.userid
		left join sys_employee e
		on e.id = u.employeeid) t
		group by t.id) t
		on t.id = rde.id
		where rd.id=#{id}
	</select>
</mapper>